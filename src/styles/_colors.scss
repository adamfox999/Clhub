// Colour Themes
$light-scheme: (
  primary: #39608F,
  surfaceTint: #39608F,
  onPrimary: #FFFFFF,
  primaryContainer: #D3E4FF,
  onPrimaryContainer: #1D4875,
  secondary: #545F70,
  onSecondary: #FFFFFF,
  secondaryContainer: #D7E3F8,
  onSecondaryContainer: #3C4858,
  tertiary: #6C5677,
  onTertiary: #FFFFFF,
  tertiaryContainer: #F4D9FF,
  onTertiaryContainer: #533F5E,
  error: #BA1A1A,
  onError: #FFFFFF,
  errorContainer: #FFDAD6,
  onErrorContainer: #93000A,
  background: #F8F9FF,
  onBackground: #191C20,
  surface: #F8F9FF,
  onSurface: #191C20,
  surfaceVariant: #DFE2EB,
  onSurfaceVariant: #43474E,
  outline: #73777F,
  outlineVariant: #C3C6CF,
  shadow: #000000,
  scrim: #000000,
  inverseSurface: #2E3035,
  inverseOnSurface: #EFF0F7,
  inversePrimary: #A3C9FE,
  primaryFixed: #D3E4FF,
  onPrimaryFixed: #001C38,
  primaryFixedDim: #A3C9FE,
  onPrimaryFixedVariant: #1D4875,
  secondaryFixed: #D7E3F8,
  onSecondaryFixed: #101C2B,
  secondaryFixedDim: #BBC7DB,
  onSecondaryFixedVariant: #3C4858,
  tertiaryFixed: #F4D9FF,
  onTertiaryFixed: #261431,
  tertiaryFixedDim: #D8BDE3,
  onTertiaryFixedVariant: #533F5E,
  surfaceDim: #D8DAE0,
  surfaceBright: #F8F9FF,
  surfaceContainerLowest: #FFFFFF,
  surfaceContainerLow: #F2F3FA,
  surfaceContainer: #ECEDF4,
  surfaceContainerHigh: #E7E8EE,
  surfaceContainerHighest: #E1E2E8,
  darkFixed: #111418, 
  inverseSurfaceFixed: #2E3035,
  inverseOnSurfaceFixed: #EFF0F7
);

$dark-scheme: (
  primary: #A3C9FE,
  surfaceTint: #A3C9FE,
  onPrimary: #00315B,
  primaryContainer: #1D4875,
  onPrimaryContainer: #D3E4FF,
  secondary: #BBC7DB,
  onSecondary: #263141,
  secondaryContainer: #3C4858,
  onSecondaryContainer: #D7E3F8,
  tertiary: #D8BDE3,
  onTertiary: #3C2947,
  tertiaryContainer: #533F5E,
  onTertiaryContainer: #F4D9FF,
  error: #FFB4AB,
  onError: #690005,
  errorContainer: #93000A,
  onErrorContainer: #FFDAD6,
  background: #111418,
  onBackground: #E1E2E8,
  surface: #111418,
  onSurface: #E1E2E8,
  surfaceVariant: #43474E,
  onSurfaceVariant: #C3C6CF,
  outline: #8D9199,
  outlineVariant: #43474E,
  shadow: #000000,
  scrim: #000000,
  inverseSurface: #E1E2E8,
  inverseOnSurface: #2E3035,
  inversePrimary: #39608F,
  primaryFixed: #D3E4FF,
  onPrimaryFixed: #001C38,
  primaryFixedDim: #A3C9FE,
  onPrimaryFixedVariant: #1D4875,
  secondaryFixed: #D7E3F8,
  onSecondaryFixed: #101C2B,
  secondaryFixedDim: #BBC7DB,
  onSecondaryFixedVariant: #3C4858,
  tertiaryFixed: #F4D9FF,
  onTertiaryFixed: #261431,
  tertiaryFixedDim: #D8BDE3,
  onTertiaryFixedVariant: #533F5E,
  surfaceDim: #111418,
  surfaceBright: #37393E,
  surfaceContainerLowest: #0B0E13,
  surfaceContainerLow: #191C20,
  surfaceContainer: #1D2024,
  surfaceContainerHigh: #272A2F,
  surfaceContainerHighest: #32353A,
  darkFixed: #111418,
  inverseOnSurfaceFixed: #EFF0F7
);

// Updated mixin that can output either the hex or the RGB value.
// Pass $use-rgb: true to output RGB components.
@mixin generate-theme($theme, $use-rgb: false) {
  @each $key, $value in $theme {
    @if $use-rgb {
      --#{$key}: #{hex-to-rgb($value)};
    } @else {
      --#{$key}: #{$value};
    }
  }
}

// Helper function: converts a hex color to an "R, G, B" string.
@function hex-to-rgb($color) {
  $r: red($color);
  $g: green($color);
  $b: blue($color);
  @return "#{$r}, #{$g}, #{$b}";
}

// Light theme is the default (applied on :root)
:root {
  @include generate-theme($light-scheme, true);
}

// Dark theme overrides in a single class
.dark-theme {
  @include generate-theme($dark-scheme, true);
}

